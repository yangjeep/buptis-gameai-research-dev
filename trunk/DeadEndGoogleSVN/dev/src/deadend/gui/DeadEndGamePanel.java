/*
 * deadend.gui.DeadEndGamePanel
 * Copyright (C) Yang JiaJian 2009 <Yang JiaJian>
 * deadend.gui.DeadEndGamePanel is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * deadend.gui.DeadEndGamePanel is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * DeadEndGamePanel.java
 *
 * Created on 2009-3-1, 18:47:21
 */

package deadend.gui;

import java.awt.*;
import javax.swing.*;

import deadend.game.GameConfigClass;

/**
 *
 * @author Yang JiaJian
 */
public class DeadEndGamePanel extends javax.swing.JPanel {

    /** Creates new form DeadEndGamePanel */
    public DeadEndGamePanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void paint(Graphics g){

        //Draw the grids
        int numOfX,numOfY;
        numOfX=deadend.game.GameConfigClass.GridX;
        numOfY=deadend.game.GameConfigClass.GridY;

        int unitx,unity;
        unitx=this.getWidth()/numOfX;
        unity=this.getHeight()/numOfY;

        g.setColor(Color.GRAY);
        for(int i=0;i<=numOfX;i++){
            g.drawLine(i*unitx, 0, i*unitx, this.getHeight());
        }
        for(int i=0;i<=numOfX;i++){
            g.drawLine(0, i*unity, this.getWidth(), i*unity);
        }

    }
}
